[%
var attributes = stereo.getAllAttributes();
var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");
var plugin_id = "at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool";
var UMLUtil = plugin.getUMLUtil();

%]
package at.ac.tuwien.dsg.uml.profiles.infrastructurecpsprofile.stereotypes.pojos;

/************************************
This POJO Java class is automatically generated from the [%=stereo.name.firstToUpperCase()%] stereotype
using EPSILON framework.
The corresponding EPSILON type is
[%=stereo.type()%]
[%=UMLUtil.getQualifiedText(stereo.type())%]
This class provide a toJson method that serialize objects of this class in JSON using the GSON Library
************************************/

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;
import [%=plugin_id%];

public class [%=stereo.name.firstToUpperCase()%] {



	/*
	Variable for the connection ends.
	*/
	@SerializedName("name") 
	private String __name = new String("Undefined");
[%
// type specific attributes calculated
//Communication
if (stereo.name = "Communication") {
%]
	/*
	Variable for the connection ends.
	*/ 
	@SerializedName("connection_ends")
	private List<String> _connection_ends = new ArrayList<String>();
[%
}
%]	
	
[%
for (attribute in attributes) { 

	if(not attribute.name.startsWith("base_"))
	{ 
	var type = attribute.type().toString();
	//(type).println();

%]

		
	/*
	Variable for the attribute [%=attribute.name%].
	*/
	@SerializedName("[%=attribute.name%]")
	private List<String> _[%=attribute.name%] = new ArrayList<String>();
	
[%
	}
}
%]
	/*
	Variable _type with the name of the stereotype
	*/
	@SerializedName("type")
	public String __type = new String ("[%=stereo.name.firstToUpperCase()%]");

	public [%=stereo.name.firstToUpperCase()%]() {
[%
for (attribute in attributes) { 

	if(not attribute.name.startsWith("base_"))
	{ 
		//var tagdef = UMLUtil.getTagDefinition(stereo, attribute.name);
		//(tagdef).println();
%]
		/*
		Variable for the attribute [%=attribute.name%].
		*/
		this._[%=attribute.name%] = new ArrayList<String>();
[%
	}
}

%]
	}


	public static void main(String[] args) {
		// Auto-generated method to test the [%=stereo.name%] POJO class
		
		[%=stereo.name.firstToUpperCase()%] _stereo = new [%=stereo.name.firstToUpperCase()%]();
		_stereo.toJson();
		
	}
	
	public String toJson(){
	

        Gson gson = new GsonBuilder().setPrettyPrinting().create();
        
        // Convert numbers array into JSON string.
        String _element = gson.toJson(this);
        
        System.out.println("element = " + _element);    
        
        return _element;   
	}

[%
for (attribute in attributes) { 

	if(not attribute.name.startsWith("base_"))
	{ 
%]
	/**
	 * @return the [%=attribute.name%]
	 */
	public List<String> get[%=attribute.name.firstToUpperCase()%]() {
		return this._[%=attribute.name%];
	}
	/**
	 * @param [%=attribute.name%] the [%=attribute.name%] to add
	 */
	public void add[%=attribute.name.firstToUpperCase()%](String _[%=attribute.name%]) {
		this._[%=attribute.name%].add(_[%=attribute.name%].toString());
	}
[%
	}
}
%]
	/**
	 * @return the _name
	 */
	public String getName() {
		return this.__name;
	}
	/**
	 * @param end the Communication to add
	 */
	public void setName(String __name) {
		this.__name = __name;
	}
[%
// type specific operations 
//Communication
if (stereo.name = "Communication") {
%]
	/**
	 * @return the connection ends
	 */
	public List<String> getConnectionEnds() {
		return this._connection_ends;
	}
	/**
	 * @param end the Communication to add
	 */
	public void addConnectionEnds(String _end) {
		this._connection_ends.add(_end.toString());
	}
[%
}
%]	
}