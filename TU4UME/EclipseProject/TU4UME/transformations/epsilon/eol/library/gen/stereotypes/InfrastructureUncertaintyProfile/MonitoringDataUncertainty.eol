
import "../../../../../eol/library/element.eol";

/*
Returns a Sequence of Element annotated with MonitoringDataUncertainty.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.
*/ 

operation Package MonitoringDataUncertaintysAsSequence() : Sequence {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isMonitoringDataUncertainty()){
			returnValue.add(son);
		}
	} 
	return returnValue;
}


/*
Returns a Sequence of Element annotated with MonitoringDataUncertainty.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.


operation Package MonitoringDataUncertaintysAsSequenceOfElement() : Sequence {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isElementMonitoringDataUncertainty()){
			returnValue.add(son);
		}
	} 
	return returnValue;
}

*/ 
/*
NEW NEW NEW Check if the element is annotated with MonitoringDataUncertainty.
 
operation isElementMonitoringDataUncertainty(elem : Element) : Boolean {

	if(elem.isUndefined() or elem.getAppliedStereotypes().isUndefined() ){
		("the element is undefined").println();
		showError("Method: isMonitoringDataUncertainty() : Boolean in MonitoringDataUncertainty.eol");
	}
	var eclass_name = elem.type.name;
	if (eclass_name = "Element"){
		return true;
	}
	return false;
}
*/
/*
Returns the JSON representation of a Sequence of Element annotated with MonitoringDataUncertainty.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.
 
operation Package JSONMonitoringDataUncertaintysAsSequenceOfElement() : String {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isElementMonitoringDataUncertainty()){
			returnValue.add(son);
		}
	} 
	
	var return_value_string = returnValue.asString();
	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(return_value_string);	
	
	return jsonOutput;	
}
*/
/* DEPRECATED THEN COMMENTED
Return the BaseElement of type Element from the applied Stereotype MonitoringDataUncertainty

operation MonitoringDataUncertainty getBaseElementOfMonitoringDataUncertainty() : Element{
	var baseElement = new MonitoringDataUncertainty;
	baseElement = self.base_Element;
	return baseElement;
}
*/ 
/* DEPRECATED THEN COMMENTED
Return the JSON representation of the BaseElement of type Element from the applied Stereotype MonitoringDataUncertainty

operation MonitoringDataUncertainty JSONgetBaseElementOfMonitoringDataUncertainty() : String {
	var baseElement = new MonitoringDataUncertainty;
	baseElement = self.base_Element;
	
	var baseElement_string = baseElement.asString();
	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(baseElement_string);	
	
	return jsonOutput;
}
*/ 

/*
Return the JSON String of the base element of the applied Stereotype MonitoringDataUncertainty using native objects.
 
operation Element toJsonMonitoringDataUncertainty() : String {
	var baseElement = null;
	
	var self_string = self.asString();
	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(self_string);	
	(jsonOutput).println();
	return jsonOutput;
}
*/
/*
Returns a Sequence of Classifier annotated with MonitoringDataUncertainty.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.


operation Package MonitoringDataUncertaintysAsSequenceOfClassifier() : Sequence {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isClassifierMonitoringDataUncertainty()){
			returnValue.add(son);
		}
	} 
	return returnValue;
}

*/ 
/*
NEW NEW NEW Check if the element is annotated with MonitoringDataUncertainty.
 
operation isClassifierMonitoringDataUncertainty(elem : Element) : Boolean {

	if(elem.isUndefined() or elem.getAppliedStereotypes().isUndefined() ){
		("the element is undefined").println();
		showError("Method: isMonitoringDataUncertainty() : Boolean in MonitoringDataUncertainty.eol");
	}
	var eclass_name = elem.type.name;
	if (eclass_name = "Classifier"){
		return true;
	}
	return false;
}
*/
/*
Returns the JSON representation of a Sequence of Classifier annotated with MonitoringDataUncertainty.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.
 
operation Package JSONMonitoringDataUncertaintysAsSequenceOfClassifier() : String {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isClassifierMonitoringDataUncertainty()){
			returnValue.add(son);
		}
	} 
	
	var return_value_string = returnValue.asString();
	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(return_value_string);	
	
	return jsonOutput;	
}
*/
/* DEPRECATED THEN COMMENTED
Return the BaseElement of type Classifier from the applied Stereotype MonitoringDataUncertainty

operation MonitoringDataUncertainty getBaseClassifierOfMonitoringDataUncertainty() : Classifier{
	var baseClassifier = new MonitoringDataUncertainty;
	baseClassifier = self.base_Classifier;
	return baseClassifier;
}
*/ 
/* DEPRECATED THEN COMMENTED
Return the JSON representation of the BaseElement of type Classifier from the applied Stereotype MonitoringDataUncertainty

operation MonitoringDataUncertainty JSONgetBaseClassifierOfMonitoringDataUncertainty() : String {
	var baseClassifier = new MonitoringDataUncertainty;
	baseClassifier = self.base_Classifier;
	
	var baseClassifier_string = baseClassifier.asString();
	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(baseClassifier_string);	
	
	return jsonOutput;
}
*/ 

/*
Return the JSON String of the base element of the applied Stereotype MonitoringDataUncertainty using native objects.
 
operation Classifier toJsonMonitoringDataUncertainty() : String {
	var baseElement = null;
	
	var self_string = self.asString();
	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(self_string);	
	(jsonOutput).println();
	return jsonOutput;
}
*/



/*DEPRECATED THEN COMMENTED
Return the BaseElement from the applied Stereotype MonitoringDataUncertainty
 
operation MonitoringDataUncertainty getBaseElementOfMonitoringDataUncertaintyDeprecated() : Element{
	var baseElement = new MonitoringDataUncertainty;

	
	if(not self.base_Element.isUndefined()){
		baseElement = self.base_Element;
	}
	
	if(not self.base_Classifier.isUndefined()){
		baseElement = self.base_Classifier;
	}
	
	
	return baseElement;
}
*/

/*
Return the BaseElement from the applied Stereotype MonitoringDataUncertainty using UMLUtil native object
*/ 
operation MonitoringDataUncertainty getBaseElementOfMonitoringDataUncertainty() : Element{
	var baseElement = null;

	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");
	var UMLUtil = plugin.getUMLUtil();
	baseElement =UMLUtil.getBaseElement(self);
	return baseElement;
}

/*
Return the JSON String from the applied Stereotype MonitoringDataUncertainty using UMLUtil native object
 
//operation MonitoringDataUncertainty toJsonMonitoringDataUncertainty() : String {
operation toJsonMonitoringDataUncertainty() : String {

	var baseElement = null;

	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");
	var UMLUtil = plugin.getUMLUtil();
	baseElement =UMLUtil.getBaseElement(self);
	
	var baseElement_string = baseElement.asString();
	var gson = plugin.getGson();
	gson = new GsonBuilder().setPrettyPrinting().create();
	var jsonOutput = gson.toJson(baseElement_string);	
	
	return jsonOutput;
}
*/

/*
Check if the element is annotated with MonitoringDataUncertainty.
*/ 
operation Element isMonitoringDataUncertainty() : Boolean {
	if(self.isUndefined() or self.getAppliedStereotypes().isUndefined() ){
		("the element is undefined").println();
		showError("Method: isMonitoringDataUncertainty() : Boolean in MonitoringDataUncertainty.eol");
	}
	return self.getAppliedStereotypes()->exists(s | s.name = "MonitoringDataUncertainty");
}



/*
Returns a Sequence of Property defined in MonitoringDataUncertainty.
*/ 
operation MonitoringDataUncertainty getAllAttributesOfMonitoringDataUncertainty() : Sequence(Property){
	var stereotypeAttr = MonitoringDataUncertainty.allAttributes();
	var returnValue : Sequence(Property) = new Sequence(Property);
	
	for(attr in stereotypeAttr){
		if(not attr.name.startsWith("base_"))
		{ 
			returnValue.add(attr);
		}
	}
	return returnValue;	
}

/*
Returns a Sequence of description of stereotype MonitoringDataUncertainty.
*/ 
operation Element getDescriptionOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "description");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of cause_type of stereotype MonitoringDataUncertainty.
*/ 
operation Element getCause_typeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "cause_type");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of effect_propagation_type of stereotype MonitoringDataUncertainty.
*/ 
operation Element getEffect_propagation_typeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "effect_propagation_type");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of functional_dimensionality_type of stereotype MonitoringDataUncertainty.
*/ 
operation Element getFunctional_dimensionality_typeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "functional_dimensionality_type");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of locality_type of stereotype MonitoringDataUncertainty.
*/ 
operation Element getLocality_typeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "locality_type");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of non_functional_dimensionality_type of stereotype MonitoringDataUncertainty.
*/ 
operation Element getNon_functional_dimensionality_typeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "non_functional_dimensionality_type");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of observation_time_type of stereotype MonitoringDataUncertainty.
*/ 
operation Element getObservation_time_typeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "observation_time_type");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of temporal_manifestation_type of stereotype MonitoringDataUncertainty.
*/ 
operation Element getTemporal_manifestation_typeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "temporal_manifestation_type");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of cause of stereotype MonitoringDataUncertainty.
*/ 
operation Element getCauseOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "cause");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of effect of stereotype MonitoringDataUncertainty.
*/ 
operation Element getEffectOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "effect");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of field of stereotype MonitoringDataUncertainty.
*/ 
operation Element getFieldOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "field");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of from of stereotype MonitoringDataUncertainty.
*/ 
operation Element getFromOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "from");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of kind of stereotype MonitoringDataUncertainty.
*/ 
operation Element getKindOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "kind");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of lifeTime of stereotype MonitoringDataUncertainty.
*/ 
operation Element getLifeTimeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "lifeTime");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of locality of stereotype MonitoringDataUncertainty.
*/ 
operation Element getLocalityOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "locality");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of pattern of stereotype MonitoringDataUncertainty.
*/ 
operation Element getPatternOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "pattern");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of referredCause of stereotype MonitoringDataUncertainty.
*/ 
operation Element getReferredCauseOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredCause");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of referredEffect of stereotype MonitoringDataUncertainty.
*/ 
operation Element getReferredEffectOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredEffect");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of referredIndeterminacySource of stereotype MonitoringDataUncertainty.
*/ 
operation Element getReferredIndeterminacySourceOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredIndeterminacySource");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of referredLifeTime of stereotype MonitoringDataUncertainty.
*/ 
operation Element getReferredLifeTimeOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredLifeTime");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of referredPattern of stereotype MonitoringDataUncertainty.
*/ 
operation Element getReferredPatternOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredPattern");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of risk of stereotype MonitoringDataUncertainty.
*/ 
operation Element getRiskOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "risk");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of riskInDT of stereotype MonitoringDataUncertainty.
*/ 
operation Element getRiskInDTOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "riskInDT");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of riskInDTViaClass of stereotype MonitoringDataUncertainty.
*/ 
operation Element getRiskInDTViaClassOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "riskInDTViaClass");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of riskLevel of stereotype MonitoringDataUncertainty.
*/ 
operation Element getRiskLevelOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "riskLevel");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of uncertaintyMeasurement of stereotype MonitoringDataUncertainty.
*/ 
operation Element getUncertaintyMeasurementOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "uncertaintyMeasurement");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of indeterminacySource of stereotype MonitoringDataUncertainty.
*/ 
operation Element getIndeterminacySourceOfMonitoringDataUncertaintyAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "indeterminacySource");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}


/*
Check if a Sequence of description of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isDescriptionOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "description");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of cause_type of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isCause_typeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "cause_type");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of effect_propagation_type of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isEffect_propagation_typeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "effect_propagation_type");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of functional_dimensionality_type of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isFunctional_dimensionality_typeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "functional_dimensionality_type");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of locality_type of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isLocality_typeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "locality_type");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of non_functional_dimensionality_type of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isNon_functional_dimensionality_typeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "non_functional_dimensionality_type");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of observation_time_type of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isObservation_time_typeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "observation_time_type");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of temporal_manifestation_type of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isTemporal_manifestation_typeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "temporal_manifestation_type");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of cause of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isCauseOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "cause");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of effect of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isEffectOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "effect");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of field of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isFieldOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "field");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of from of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isFromOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "from");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of kind of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isKindOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "kind");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of lifeTime of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isLifeTimeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "lifeTime");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of locality of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isLocalityOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "locality");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of pattern of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isPatternOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "pattern");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of referredCause of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isReferredCauseOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredCause");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of referredEffect of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isReferredEffectOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredEffect");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of referredIndeterminacySource of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isReferredIndeterminacySourceOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredIndeterminacySource");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of referredLifeTime of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isReferredLifeTimeOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredLifeTime");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of referredPattern of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isReferredPatternOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "referredPattern");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of risk of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isRiskOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "risk");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of riskInDT of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isRiskInDTOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "riskInDT");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of riskInDTViaClass of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isRiskInDTViaClassOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "riskInDTViaClass");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of riskLevel of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isRiskLevelOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "riskLevel");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of uncertaintyMeasurement of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isUncertaintyMeasurementOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "uncertaintyMeasurement");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of indeterminacySource of stereotype MonitoringDataUncertainty is empty.
*/ 
operation Element isIndeterminacySourceOfMonitoringDataUncertaintyEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("MonitoringDataUncertainty"), "indeterminacySource");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}


operation Stereotype getDescriptionProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var descriptionProperty = allAttributes.selectOne(s|s.name = "description");
	return descriptionProperty;
}


operation Stereotype getCause_typeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var cause_typeProperty = allAttributes.selectOne(s|s.name = "cause_type");
	return cause_typeProperty;
}


operation Stereotype getEffect_propagation_typeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var effect_propagation_typeProperty = allAttributes.selectOne(s|s.name = "effect_propagation_type");
	return effect_propagation_typeProperty;
}


operation Stereotype getFunctional_dimensionality_typeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var functional_dimensionality_typeProperty = allAttributes.selectOne(s|s.name = "functional_dimensionality_type");
	return functional_dimensionality_typeProperty;
}


operation Stereotype getLocality_typeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var locality_typeProperty = allAttributes.selectOne(s|s.name = "locality_type");
	return locality_typeProperty;
}


operation Stereotype getNon_functional_dimensionality_typeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var non_functional_dimensionality_typeProperty = allAttributes.selectOne(s|s.name = "non_functional_dimensionality_type");
	return non_functional_dimensionality_typeProperty;
}


operation Stereotype getObservation_time_typeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var observation_time_typeProperty = allAttributes.selectOne(s|s.name = "observation_time_type");
	return observation_time_typeProperty;
}


operation Stereotype getTemporal_manifestation_typeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var temporal_manifestation_typeProperty = allAttributes.selectOne(s|s.name = "temporal_manifestation_type");
	return temporal_manifestation_typeProperty;
}


operation Stereotype getCauseProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var causeProperty = allAttributes.selectOne(s|s.name = "cause");
	return causeProperty;
}


operation Stereotype getEffectProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var effectProperty = allAttributes.selectOne(s|s.name = "effect");
	return effectProperty;
}


operation Stereotype getFieldProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var fieldProperty = allAttributes.selectOne(s|s.name = "field");
	return fieldProperty;
}


operation Stereotype getFromProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var fromProperty = allAttributes.selectOne(s|s.name = "from");
	return fromProperty;
}


operation Stereotype getKindProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var kindProperty = allAttributes.selectOne(s|s.name = "kind");
	return kindProperty;
}


operation Stereotype getLifeTimeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var lifeTimeProperty = allAttributes.selectOne(s|s.name = "lifeTime");
	return lifeTimeProperty;
}


operation Stereotype getLocalityProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var localityProperty = allAttributes.selectOne(s|s.name = "locality");
	return localityProperty;
}


operation Stereotype getPatternProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var patternProperty = allAttributes.selectOne(s|s.name = "pattern");
	return patternProperty;
}


operation Stereotype getReferredCauseProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var referredCauseProperty = allAttributes.selectOne(s|s.name = "referredCause");
	return referredCauseProperty;
}


operation Stereotype getReferredEffectProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var referredEffectProperty = allAttributes.selectOne(s|s.name = "referredEffect");
	return referredEffectProperty;
}


operation Stereotype getReferredIndeterminacySourceProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var referredIndeterminacySourceProperty = allAttributes.selectOne(s|s.name = "referredIndeterminacySource");
	return referredIndeterminacySourceProperty;
}


operation Stereotype getReferredLifeTimeProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var referredLifeTimeProperty = allAttributes.selectOne(s|s.name = "referredLifeTime");
	return referredLifeTimeProperty;
}


operation Stereotype getReferredPatternProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var referredPatternProperty = allAttributes.selectOne(s|s.name = "referredPattern");
	return referredPatternProperty;
}


operation Stereotype getRiskProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var riskProperty = allAttributes.selectOne(s|s.name = "risk");
	return riskProperty;
}


operation Stereotype getRiskInDTProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var riskInDTProperty = allAttributes.selectOne(s|s.name = "riskInDT");
	return riskInDTProperty;
}


operation Stereotype getRiskInDTViaClassProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var riskInDTViaClassProperty = allAttributes.selectOne(s|s.name = "riskInDTViaClass");
	return riskInDTViaClassProperty;
}


operation Stereotype getRiskLevelProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var riskLevelProperty = allAttributes.selectOne(s|s.name = "riskLevel");
	return riskLevelProperty;
}


operation Stereotype getUncertaintyMeasurementProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var uncertaintyMeasurementProperty = allAttributes.selectOne(s|s.name = "uncertaintyMeasurement");
	return uncertaintyMeasurementProperty;
}


operation Stereotype getIndeterminacySourceProperty() : Property {
	var allAttributes = self.getAllAttributes();
	var indeterminacySourceProperty = allAttributes.selectOne(s|s.name = "indeterminacySource");
	return indeterminacySourceProperty;
}

