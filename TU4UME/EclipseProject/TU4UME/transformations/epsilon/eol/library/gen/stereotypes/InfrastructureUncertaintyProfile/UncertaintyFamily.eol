
import "../../../../../eol/library/element.eol";

/*
Returns a Sequence of Element annotated with UncertaintyFamily.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.
*/ 

operation Package UncertaintyFamilysAsSequence() : Sequence {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isUncertaintyFamily()){
			returnValue.add(son);
		}
	} 
	return returnValue;
}





/*DEPRECATED THEN COMMENTED
Return the BaseElement from the applied Stereotype UncertaintyFamily
 
operation UncertaintyFamily getBaseElementOfUncertaintyFamilyDeprecated() : Element{
	var baseElement = new UncertaintyFamily;

	
	
	return baseElement;
}
*/

/*
Return the BaseElement from the applied Stereotype UncertaintyFamily using UMLUtil native object
*/ 
operation UncertaintyFamily getBaseElementOfUncertaintyFamily() : Element{
	var baseElement = null;

	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");
	var UMLUtil = plugin.getUMLUtil();
	baseElement =UMLUtil.getBaseElement(self);
	return baseElement;
}

/*
Return the JSON String from the applied Stereotype UncertaintyFamily using UMLUtil native object
 
//operation UncertaintyFamily toJsonUncertaintyFamily() : String {
operation toJsonUncertaintyFamily() : String {

	var baseElement = null;

	var plugin : new Native("at.ac.tuwien.dsg.tu4ume.epsilon.externaltools.SampleTool");
	var UMLUtil = plugin.getUMLUtil();
	baseElement =UMLUtil.getBaseElement(self);
	
	var baseElement_string = baseElement.asString();
	var gson = plugin.getGson();
	gson = new GsonBuilder().setPrettyPrinting().create();
	var jsonOutput = gson.toJson(baseElement_string);	
	
	return jsonOutput;
}
*/

/*
Check if the element is annotated with UncertaintyFamily.
*/ 
operation Element isUncertaintyFamily() : Boolean {
	if(self.isUndefined() or self.getAppliedStereotypes().isUndefined() ){
		("the element is undefined").println();
		showError("Method: isUncertaintyFamily() : Boolean in UncertaintyFamily.eol");
	}
	return self.getAppliedStereotypes()->exists(s | s.name = "UncertaintyFamily");
}



/*
Returns a Sequence of Property defined in UncertaintyFamily.
*/ 
operation UncertaintyFamily getAllAttributesOfUncertaintyFamily() : Sequence(Property){
	var stereotypeAttr = UncertaintyFamily.allAttributes();
	var returnValue : Sequence(Property) = new Sequence(Property);
	
	for(attr in stereotypeAttr){
		if(not attr.name.startsWith("base_"))
		{ 
			returnValue.add(attr);
		}
	}
	return returnValue;	
}



