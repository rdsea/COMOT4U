

import "../../../../eol/library/element.eol";


/*
Returns a Sequence of Element annotated with SporadicManifestation.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.
*/ 

operation Package SporadicManifestationsAsSequenceOfElement() : Sequence {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isSporadicManifestation()){
			returnValue.add(son);
		}
	} 
	return returnValue;
}

/*
Returns the JSON representation of a Sequence of Element annotated with SporadicManifestation.
TODO: Currently the method does not distinguish between different UML Model Elements. All the methods SequenceOf* are equal.
*/ 
operation Package JSONSporadicManifestationsAsSequenceOfElement() : String {
	var returnValue = new Sequence;
	for(son in self.getPackagedElements()){
		if(son.isSporadicManifestation()){
			returnValue.add(son);
		}
	} 
	
	var return_value_string = returnValue.asString();
	var plugin : new Native("at.ac.tuwien.dsg.epsilon.tools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(return_value_string);	
	
	return jsonOutput;	
}

/* DEPRECATED THEN COMMENTED
Return the BaseElement of type Element from the applied Stereotype SporadicManifestation

operation SporadicManifestation getBaseElementOfSporadicManifestation() : Element{
	var baseElement = new SporadicManifestation;
	baseElement = self.base_Element;
	return baseElement;
}
*/ 
/* DEPRECATED THEN COMMENTED
Return the JSON representation of the BaseElement of type Element from the applied Stereotype SporadicManifestation

operation SporadicManifestation JSONgetBaseElementOfSporadicManifestation() : String {
	var baseElement = new SporadicManifestation;
	baseElement = self.base_Element;
	
	var baseElement_string = baseElement.asString();
	var plugin : new Native("at.ac.tuwien.dsg.epsilon.tools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(baseElement_string);	
	
	return jsonOutput;
}
*/ 

/*
Return the JSON String of the base element of the applied Stereotype SporadicManifestation using native objects.
*/ 
operation Element toJsonSporadicManifestation() : String {
	var baseElement = null;
	
	var self_string = self.asString();
	var plugin : new Native("at.ac.tuwien.dsg.epsilon.tools.SampleTool");	
	var gson = plugin.getGsonBuilder();
	var prettyprinter = gson.setPrettyPrinting().create();
	var jsonOutput = prettyprinter.toJson(self_string);	
	(jsonOutput).println();
	return jsonOutput;
}




/*DEPRECATED THEN COMMENTED
Return the BaseElement from the applied Stereotype SporadicManifestation
 
operation SporadicManifestation getBaseElementOfSporadicManifestationDeprecated() : Element{
	var baseElement = new SporadicManifestation;

	
	if(not self.base_Element.isUndefined()){
		baseElement = self.base_Element;
	}
	
	
	return baseElement;
}
*/

/*
Return the BaseElement from the applied Stereotype SporadicManifestation using UMLUtil native object
*/ 
operation SporadicManifestation getBaseElementOfSporadicManifestation() : Element{
	var baseElement = null;

	var plugin : new Native("at.ac.tuwien.dsg.epsilon.tools.SampleTool");
	var UMLUtil = plugin.getUMLUtil();
	baseElement =UMLUtil.getBaseElement(self);
	return baseElement;
}

/*
Return the JSON String from the applied Stereotype SporadicManifestation using UMLUtil native object
*/ 
//operation SporadicManifestation toJsonSporadicManifestation() : String {
operation toJsonSporadicManifestation() : String {

	var baseElement = null;

	var plugin : new Native("at.ac.tuwien.dsg.epsilon.tools.SampleTool");
	var UMLUtil = plugin.getUMLUtil();
	baseElement =UMLUtil.getBaseElement(self);
	
	var baseElement_string = baseElement.asString();
	var gson = plugin.getGson();
	gson = new GsonBuilder().setPrettyPrinting().create();
	var jsonOutput = gson.toJson(baseElement_string);	
	
	return jsonOutput;
}


/*
Check if the element is annotated with SporadicManifestation.
*/ 
operation Element isSporadicManifestation() : Boolean {
	if(self.isUndefined() or self.getAppliedStereotypes().isUndefined() ){
		("the element is undefined").println();
		showError("Method: isSporadicManifestation() : Boolean in SporadicManifestation.eol");
	}
	return self.getAppliedStereotypes()->exists(s | s.name = "SporadicManifestation");
}



/*
Returns a Sequence of Property defined in SporadicManifestation.
*/ 
operation SporadicManifestation getAllAttributesOfSporadicManifestation() : Sequence(Property){
	var stereotypeAttr = SporadicManifestation.allAttributes();
	var returnValue : Sequence(Property) = new Sequence(Property);
	
	for(attr in stereotypeAttr){
		if(not attr.name.startsWith("base_"))
		{ 
			returnValue.add(attr);
		}
	}
	return returnValue;	
}

/*
Returns a Sequence of timesEncountered of stereotype SporadicManifestation.
*/ 
operation Element getTimesEncounteredOfSporadicManifestationAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("SporadicManifestation"), "timesEncountered");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of configuration of stereotype SporadicManifestation.
*/ 
operation Element getConfigurationOfSporadicManifestationAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("SporadicManifestation"), "configuration");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}

/*
Returns a Sequence of description of stereotype SporadicManifestation.
*/ 
operation Element getDescriptionOfSporadicManifestationAsSequence() : Sequence{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("SporadicManifestation"), "description");
	for(value in values){
		returnValues.add(value);
	}
	return returnValues;
}


/*
Check if a Sequence of timesEncountered of stereotype SporadicManifestation is empty.
*/ 
operation Element isTimesEncounteredOfSporadicManifestationEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("SporadicManifestation"), "timesEncountered");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of configuration of stereotype SporadicManifestation is empty.
*/ 
operation Element isConfigurationOfSporadicManifestationEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("SporadicManifestation"), "configuration");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
/*
Check if a Sequence of description of stereotype SporadicManifestation is empty.
*/ 
operation Element isDescriptionOfSporadicManifestationEmpty() : Boolean{
	var returnValues = new Sequence;
	var values = self.getValue(self.getStereotype("SporadicManifestation"), "description");
	for(value in values){
		returnValues.add(value);
	}
	var empty = returnValues.isEmpty();
	return empty;
}
