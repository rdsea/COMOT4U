pre {
	var findlUnitStereotype = Stereotype.all.selectOne(s|s.name = "Unit");
}

pre {
	var findlActuatorStereotype = Stereotype.all.selectOne(s|s.name = "Actuator");
}

pre {
	var findlCPSStereotype = Stereotype.all.selectOne(s|s.name = "Infrastructure");
}
/*
Uncertainty stereotype to be applied in case of positive detection by UncertaintyDiscoveryRules
The generic stereptype application should be further detailed for more descriptive and precise uncertainty evolutions
*/
pre {
	var findlInfrastructureLevelUncertaintyStereotype = Stereotype.all.selectOne(s|s.name = "InfrastructureLevelUncertainty");
}


context Unit {
  constraint CheckTimestampMechanismAvailability {  	
    check : self.hasTimestampMechanism
		message : "The Unit " + self.base_Class.name + " does not provide a Timestamp Mechanism. New Infrastructure Uncertainty added."
		fix {
			title : "Uncertainty Evolution. New Uncertainty stereotype applied to " + self.base_Class.name
			do {
				var uncertaintyProfile = Profile.all.selectOne(p|p.name = "InfrastructureUncertaintyProfile");
				Model.all.first.applyProfile(uncertaintyProfile);
				println(uncertaintyProfile);
				self.base_Class.applyStereotype(findlInfrastructureLevelUncertaintyStereotype);	
			}
		}
	}
}

context Actuator {
  constraint CheckIfSafetyCriticalActuator {  	
    check : self.isSafetyCritical
		message : "The Actuator " + self.base_Class.name + " is safety critical. New Infrastructure Uncertainty added."
		fix {
			title : "Uncertainty Evolution. New Uncertainty stereotype applied to " + self.base_Class.name
			do {
				/*
					var newOp : new Operation;
					newOp.name = "find_server";
					var stereotype = new find_server;
					newOp.class = self.base_Class;
					newOp.applyStereotype(stereotype);
				*/
				var uncertaintyProfile = Profile.all.selectOne(p|p.name = "InfrastructureUncertaintyProfile");
				Model.all.first.applyProfile(uncertaintyProfile);
				println(uncertaintyProfile);
				
				//self.base_Class.applyStereotype(findlInfrastructureLevelUncertaintyStereotype);					
			}
		}
	}
}

context Infrastructure {
  constraint CheckDataManagementMechanismAvailability {  	
    check : self.hasSensorDataManagementMechanism
		message : "The CPS " + self.base_Class.name + " does not provide a Sensor Data Management Mechanism. New Uncertainty added."
		fix {
			title : "Uncertainty Evolution. New Uncertainty stereotype applied to " + self.base_Class.name
			do {
				/*
					var newOp : new Operation;
					newOp.name = "find_server";
					var stereotype = new find_server;
					newOp.class = self.base_Class;
					newOp.applyStereotype(stereotype);
				*/
				var uncertaintyProfile = Profile.all.selectOne(p|p.name = "InfrastructureUncertaintyProfile");
				Model.all.first.applyProfile(uncertaintyProfile);
				println(uncertaintyProfile);
				
				//self.base_Class.applyStereotype(findlInfrastructureLevelUncertaintyStereotype);				
			}
		}
	}
}